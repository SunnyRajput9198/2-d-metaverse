# --------------------
# Stage 1: Build and Prisma Client Generation
# --------------------
FROM node:20-alpine AS builder

WORKDIR /app

# Accept DB URL at build time
ARG DATABASE_URL
ENV DATABASE_URL=${DATABASE_URL}

# Enable Corepack
RUN corepack enable npm

# Install native dependencies
RUN apk add --no-cache openssl libc6-compat

# Copy all monorepo files
COPY package.json package-lock.json turbo.json ./
COPY apps ./apps
COPY packages ./packages

# Install all dependencies
RUN npm install --legacy-peer-deps

# Generate Prisma client and run migration (for production use migrations, not dev)
RUN npx prisma generate --schema=packages/db/prisma/schema.prisma

# Optional: if your production DB is ready for migration (use with caution)
# RUN npx prisma migrate deploy --schema=packages/db/prisma/schema.prisma

# Build the HTTP app
WORKDIR /app/apps/http
RUN npm run build

# --------------------
# Stage 2: Production Runtime
# --------------------
FROM node:20-alpine

WORKDIR /app

RUN corepack enable npm
RUN apk add --no-cache openssl libc6-compat

# Accept runtime DB URL
ARG DATABASE_URL
ENV DATABASE_URL=${DATABASE_URL}

# Copy only built files and runtime deps
COPY --from=builder /app/apps/http/dist ./dist
COPY --from=builder /app/apps/http/package.json ./package.json
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/packages/db/generated ./packages/db/generated

EXPOSE 3000

CMD ["node", "dist/index.js"]
